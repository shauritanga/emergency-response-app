rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow admins to read all user documents
      allow read: if request.auth != null && 
                     exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Emergency documents
    match /emergencies/{emergencyId} {
      // Anyone authenticated can read emergencies
      allow read: if request.auth != null;
      // Only authenticated users can create emergencies
      allow create: if request.auth != null && 
                       request.auth.uid == resource.data.userId;
      // Users can update their own emergencies, responders and admins can update any
      allow update: if request.auth != null && 
                       (request.auth.uid == resource.data.userId ||
                        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['responder', 'admin']));
    }
    
    // Chat messages for emergencies
    match /emergencies/{emergencyId}/messages/{messageId} {
      // Users involved in the emergency can read messages
      allow read: if request.auth != null;
      // Users can create messages if they're involved in the emergency
      allow create: if request.auth != null && request.auth.uid == request.resource.data.senderId;
    }
    
    // Emergency chat rooms
    match /emergency_chats/{chatId} {
      allow read, write: if request.auth != null;
    }
    
    // Emergency chat messages
    match /emergency_chats/{chatId}/messages/{messageId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.senderId;
    }
    
    // Notifications
    match /notifications/{notificationId} {
      // Users can read their own notifications
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      // System can create notifications for users
      allow create: if request.auth != null;
      // Users can update their own notifications (mark as read, etc.)
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Admin-only collections
    match /admin/{document=**} {
      allow read, write: if request.auth != null && 
                            exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Test collection (for debugging - remove in production)
    match /test/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Default deny all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
